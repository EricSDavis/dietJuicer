#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import pandas as pd
import glob

##### Load config and sample sheets #####

configfile: "config/config.yaml"

samples = pd.read_table(config["samples"])

onsuccess:
	print("splitFASTQ completed successfully!")

##### Define rules #####
rule all:
	input:
		expand("output/split{R}_done.txt", R=['R1', 'R2'])

rule splitR1:
	input:
		lambda wildcards: samples.iloc[[int(i) for i in samples.index]]["Read1"]
	output:
		'output/splitR1_done.txt'
	params:
		splitsize = config['split']['splitsize']
	threads: 1
	benchmark:
		'output/benchmarks/splitR1.tsv'
	shell:
		"""
		mkdir -p output/splitsR1;
		gunzip -c {input} | split -a 3 -l {params.splitsize} -d --additional-suffix=_R1.fastq --filter='gzip > output/splitsR1/$FILE.gz';
		touch {output};
		"""

rule splitR2:
	input:
		lambda wildcards: samples.iloc[[int(i) for i in samples.index]]["Read2"]
	output:
		'output/splitR2_done.txt'
	params:
		splitsize = config['split']['splitsize']
	threads: 1
	benchmark:
		'output/benchmarks/splitR2.tsv'
	shell:
		"""
		mkdir -p output/splitsR2;
		gunzip -c {input} | split -a 3 -l {params.splitsize} -d --additional-suffix=_R2.fastq --filter='gzip > output/splitsR2/$FILE.gz';
		touch {output};
		"""